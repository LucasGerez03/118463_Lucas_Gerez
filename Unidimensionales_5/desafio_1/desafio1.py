
# üìå Desaf√≠o: Men√∫ de Opciones con Listas y Funciones
# Desarrollar un programa en Python que presente un men√∫ de opciones donde el usuario pueda realizar distintas operaciones con un conjunto de n√∫meros.
# üîπ Opciones del Men√∫:
#  1Ô∏è‚É£ Ingresar datos: Permitir al usuario ingresar 10 n√∫meros enteros en el rango de -1000 a 1000.
#  2Ô∏è‚É£ Cantidad de positivos y negativos: Mostrar cu√°ntos n√∫meros ingresados son positivos y cu√°ntos son negativos.
#  3Ô∏è‚É£ Suma de los n√∫meros pares: Calcular y mostrar la sumatoria de los n√∫meros pares.
#  4Ô∏è‚É£ Mayor n√∫mero impar: Identificar y mostrar el mayor n√∫mero impar ingresado.
#  5Ô∏è‚É£ Listar los n√∫meros ingresados: Mostrar todos los n√∫meros en el orden en que fueron ingresados.
#  6Ô∏è‚É£ Listar los n√∫meros pares: Mostrar √∫nicamente los n√∫meros pares de la lista.
#  7Ô∏è‚É£ Listar los n√∫meros en posiciones impares: Mostrar los n√∫meros que se encuentran en posiciones impares dentro de la lista.
#  8Ô∏è‚É£ Salir del programa.
# üîπ Condiciones:
#  ‚úîÔ∏è El usuario debe ingresar los n√∫meros antes de acceder a las opciones 2 a 7.
#  ‚úîÔ∏è El programa debe estar estructurado en funciones, siguiendo el paradigma de programaci√≥n funcional:
# Funciones espec√≠ficas: Para operaciones como determinar si un n√∫mero es positivo, negativo o par.
# Funciones generales: Para listar elementos o calcular sumatorias.
# üîπ Estructura del C√≥digo:
#  üìå El programa debe estar organizado en m√≥dulos:
# Especificas.py: Contendr√° las funciones espec√≠ficas.
# Array_Generales.py: Contendr√° las funciones generales.
# Las funciones de entrada de datos deben importarse desde el m√≥dulo   .
# üîπ Consejo:
#  ‚úÖ Desarrollar y probar primero cada funci√≥n individualmente antes de organizarlas en m√≥dulos.

from especificas import *
from generales import *

ingreso_numeros= False
numeros_lista= []
while True:
    mostar_msg()
    opcion = int(input("Ingrese una opcion: "))
    match opcion:
        case 1:
            numeros_lista += ingresar_numeros()
            ingreso_numeros= True 
        case 2:
            if ingreso_numeros:
                print(cant_positivos_y_negativos(numeros_lista))
            else:
                print("Ingresar numeros antes de acceder a esta opcion")
        case 3:
            print(f"la suma total de los numeros pares de la lista es:{sumar_pares_de_lista(numeros_lista)}")
        case 4:
            print(f"mayor numero impar de la lista {print(mayor_numero_impar(numeros_lista))}")
        case 5:
            mostrar_lista_en_orden(numeros_lista)
        case 6:
            mostrar_numeros_pares(numeros_lista)
        case 7:
            if not ingreso_numeros:
                print("Ingresar numeros antes de acceder a esta opcion")
            else:
                mostrar_numeros_en_pos_impares(numeros_lista)

        case 8:
            print(f"Gracias por usar el programa, Adios")
            break

    print("desea continuar?: ")
    respuesta = input("Y/N: ")
    if respuesta.lower() == "y":
        continue
    else:
        print(f"Gracias por usar el programa, Adios :D")
        break


