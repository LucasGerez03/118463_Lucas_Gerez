
# üìå Desaf√≠o: Men√∫ de Opciones con Listas y Funciones
# Desarrollar un programa en Python que presente un men√∫ de opciones donde el usuario pueda realizar distintas operaciones con un conjunto de n√∫meros.
# üîπ Opciones del Men√∫:
#  1Ô∏è‚É£ Ingresar datos: Permitir al usuario ingresar 10 n√∫meros enteros en el rango de -1000 a 1000.
#  2Ô∏è‚É£ Cantidad de positivos y negativos: Mostrar cu√°ntos n√∫meros ingresados son positivos y cu√°ntos son negativos.
#  3Ô∏è‚É£ Suma de los n√∫meros pares: Calcular y mostrar la sumatoria de los n√∫meros pares.
#  4Ô∏è‚É£ Mayor n√∫mero impar: Identificar y mostrar el mayor n√∫mero impar ingresado.
#  5Ô∏è‚É£ Listar los n√∫meros ingresados: Mostrar todos los n√∫meros en el orden en que fueron ingresados.
#  6Ô∏è‚É£ Listar los n√∫meros pares: Mostrar √∫nicamente los n√∫meros pares de la lista.
#  7Ô∏è‚É£ Listar los n√∫meros en posiciones impares: Mostrar los n√∫meros que se encuentran en posiciones impares dentro de la lista.
#  8Ô∏è‚É£ Salir del programa.
# üîπ Condiciones:
#  ‚úîÔ∏è El usuario debe ingresar los n√∫meros antes de acceder a las opciones 2 a 7.
#  ‚úîÔ∏è El programa debe estar estructurado en funciones, siguiendo el paradigma de programaci√≥n funcional:
# Funciones espec√≠ficas: Para operaciones como determinar si un n√∫mero es positivo, negativo o par.
# Funciones generales: Para listar elementos o calcular sumatorias.
# üîπ Estructura del C√≥digo:
#  üìå El programa debe estar organizado en m√≥dulos:
# Especificas.py: Contendr√° las funciones espec√≠ficas.
# Array_Generales.py: Contendr√° las funciones generales.
# Las funciones de entrada de datos deben importarse desde el m√≥dulo   .
# üîπ Consejo:
#  ‚úÖ Desarrollar y probar primero cada funci√≥n individualmente antes de organizarlas en m√≥dulos.

from especificas import *
from generales import *

# mostar_msg()
# print(esta_entre(1,10,20))
# print(es_positivo(-1))
# ingresar_numeros()

def cant_positivos_y_negativos(lista=[]):
    positivos= []
    negativos= []
    cant_pos = 0
    cant_neg = 0
    for numero in lista:
        if es_positivo(numero):
            positivos+= [numero]
            cant_pos+= 1
        else:
            negativos+= [numero]
            cant_neg+=1
    return f"-Cant. Negativos: {cant_neg}\nCant. Positivos: {cant_pos}\nLista Negativos: {negativos} \n Lista Positivos: {positivos}"

def sumar_pares_de_lista(lista=[]):
    total = 0
    for numero in lista:
        if es_par(numero):
            total += numero
        else:
            continue
    return total

print(sumar_pares_de_lista([5,-2,-7,-8,12]))
# print(cant_positivos_y_negativos([]))

# while True:
#     mostar_msg()
#     opcion = int(input("ingrese una de las opcioens 1-8: "))

# mostar_msg()